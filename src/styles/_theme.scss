// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!

$plt-primary: (
  50: #fff8e1,
  100: #ffecb5,
  200: #ffe083,
  300: #ffd451,
  400: #ffca2c,
  500: #ffc107,
  600: #ffbb06,
  700: #ffb305,
  800: #ffab04,
  900: #ff9e02,
  A100: #ffffff,
  A200: #fffaf2,
  A400: #ffe4bf,
  A700: #ffd9a6,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #000000,
    500: #000000,
    600: #000000,
    700: #000000,
    800: #000000,
    900: #000000,
    A100: #000000,
    A200: #000000,
    A400: #000000,
    A700: #000000,
  ),
);

$plt-accent: (
  50: #ffebe4,
  100: #ffcdbd,
  200: #ffab91,
  300: #ff8964,
  400: #ff7043,
  500: #ff5722,
  600: #ff4f1e,
  700: #ff4619,
  800: #ff3c14,
  900: #ff2c0c,
  A100: #ffffff,
  A200: #fff7f6,
  A400: #ffc9c3,
  A700: #ffb2a9,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #000000,
    500: #000000,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #000000,
    A700: #000000,
  ),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

$travel-on-primary: mat.define-palette($plt-primary);
$travel-on-accent: mat.define-palette($plt-accent);

// The warn palette is optional (defaults to red).
$travel-on-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$travel-on-theme: mat.define-light-theme(
  (
    color: (
      primary: $travel-on-primary,
      accent: $travel-on-accent,
      warn: $travel-on-warn,
    ),
  )
);

$plt-background: map-get($travel-on-theme, background);
$plt-foreground: map-get($travel-on-theme, foreground);

$p-keys: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900;
$a-keys: (
  100: A100,
  200: A200,
  400: A400,
  700: A700,
  500: 500,
);

@mixin travel-on-theme {
  @include mat.core();

  // Include theme styles for core and each component used in your app.
  // Alternatively, you can import and @include the theme mixins for each component
  // that you are using.

  @include mat.all-component-themes($travel-on-theme);

  :root {
    @each $key in $p-keys {
      --p-#{$key}: #{map-get($plt-primary, $key)};
    }

    @each $key, $value in $a-keys {
      --a-#{$key}: #{map-get($plt-accent, $value)};
    }

    @each $key, $value in $plt-background {
      --b-#{$key}: #{$value};
    }

    @each $key, $value in $plt-foreground {
      --f-#{$key}: #{$value};
    }
  }
}
